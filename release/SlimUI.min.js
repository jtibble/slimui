var bootstrapModule=angular.module("bootstrapModule",[]);bootstrapModule.provider("bootstrapper",function(){return{$get:["$http","$q",function(e,o){return{bootstrap:function(t){var r=o.defer();return e.get("config.json").success(function(e){var o=angular.module(t);angular.forEach(e,function(e,t){o.constant(t,e)}),angular.bootstrap(document,[t]),r.resolve()}).error(function(){console.log("Could not initialize application, configuration could not be loaded."),r.reject()}),r.promise}}}]}});var appContainer=document.createElement("div");bootstrapModule.run(["bootstrapper",function(e){e.bootstrap("Framework").then(function(){appContainer.remove()})}]),angular.element(document).ready(function(){angular.bootstrap(appContainer,["bootstrapModule"])});var framework=angular.module("Framework",["ui.router","ui.bootstrap","ngTouch","Framework.Services"]),validateConfigFileStructure=function(e){var o=function(e,o){var t=function(o){console.log("Config.json Validation Error: View/Component '"+e+"' "+o)};return o?o.model&&!o.modelbuilder?(t(" is invalid: if includes model, must also include modelbuilder"),!1):o.modelbuilder&&!o.model?(t(" is invalid: if includes modelbuilder, must also include model"),!1):o.actions&&!o.controller?(t(" is invalid: if includes actions, must also include controller"),!1):o.modelbuilder&&!o.controller?(t(" is invalid: if includes modelbuilder, must also include controller"),!1):!0:(t("can't be validated"),!1)},t=!0;if(e.defaultView&&e.views[e.defaultView]&&(o(e.defaultView,e.views[e.defaultView])||(console.log("Config defaultView exists, but points to an invalid view"),t=!1)),e.views)for(var r in e.views){var n=e.views[r];o(r,n)||(console.log("	View '"+r+"' is invalid with broken template or controller"),t=!1),n.regions&&(n.url||(console.log("View '"+r+"' is invalid: cannot specify regions without 'url' property"),t=!1))}if(e.components)for(var i in e.components)o(i,e.components[i])||(t=!1,console.log("	Component '"+i+"' is invalid with broken template or controller"));return t};framework.config(["$stateProvider","$urlRouterProvider","applicationConfig","$compileProvider","$provide","RouterProvider",function(e,o,t,r,n,i){this.applicationConfig=t,this.postConfigProvider=n,framework._directive=framework.directive,framework.directive=function(e,o){return r.directive(e,o),this},validateConfigFileStructure(t)||console.log("SlimUI ERROR: config.json file is invalid");var a=function(o,r,n){var i,l=function(e,o){var t="";for(var r in o){var n=o[r];t+="/{"+n+"}"}return"/"==e&&(e=""),"/"+e+t},s=function(e,o){return e&&o?o+"."+e:e?e:void console.log("Error: Can't create router state from view name and/or parent view name")};i=r.url?l(r.url,r.parameters):l(o,r.parameters);var c=s(o,n),u={url:i,template:"<div "+o+"></div>"};e.state(c,u);for(var d in r.subroutes){var v=r.subroutes[d],p=t.views[v];a(v,p,n?n+"."+o:o)}};for(var l in t.views){var s=t.views[l];void 0!==s.url&&a(l,s)}var c=t.views[t.defaultView],u=c.url;if(c.parameters)for(var d=0;d<c.parameters.length;d++)u+="/";i.setHomeRoute(u),o.otherwise(function(e,o){return console.log("Invalid location '"+o.$$url+"', going to default route '"+u+"'"),u})}]),framework.run(function(){var e=function(e,o){var t=e.toLowerCase();framework.directive(t,["$http","$controller","$compile","$templateCache","$injector","$q","$stateParams",function(t,r,n,i,a,l,s){function c(t,i){var l=t.$new(),c=e+"Template",u=e+"Model",d=e+"Modelbuilder",v=e+"Actions",p=e+"Controller",f=!1;if(o.template&&!window[c]&&(console.log("Couldn't correctly load template named '"+c+"'."),f=!0),o.model&&!window[u]&&(console.log("Couldn't correctly load model named '"+u+"'."),f=!0),o.model&&!window[u]&&(console.log("Couldn't correctly load modelbuilder named '"+d+"'."),f=!0),o.model&&!window[u]&&(console.log("Couldn't correctly load actions named '"+v+"'."),f=!0),o.model&&!window[u]&&(console.log("Couldn't correctly load controller named '"+p+"'."),f=!0),f)return void console.log("Check spelling in file and config.json. Aborting creation of '"+e+"'");var m=function(e){var o;try{o=a.annotate(window[e])}catch(t){console.log("Error: Failed to find dependency injection information for '"+e+"'.\n	Please check in the file that the function name is spelled correctly.")}var r=[];for(var n in o){var i=o[n];if("Context"!=i&&"Actions"!=i&&"Model"!=i&&"Modelbuilder"!=i&&"StateParameters"!=i)try{a.get(i)}catch(l){r.push(i)}}r.length&&console.log("Error: Not all of "+e+"'s dependencies have been loaded correctly.\n	Missing dependencies: "+r.toString()+"\nIf these are newly-added dependency injections, have they been added to config.json and named correctly? Additionally, check that the spelling in "+e+" matches the function name in the dependency's JavaScript file.")};o.modelbuilder&&m(d),o.actions&&m(v),o.controller&&m(p);var g,w,h;if(window[u])try{var y={Model:window[u]()};g=r(window[d],y)}catch(V){console.log("Error: Could not inject model into modelbuilder '"+d+"'. Exception: \n	"+V.message)}if(window[v])try{var b={Context:l};g&&(b.Modelbuilder=g),w=r(window[v],b)}catch(V){console.log("Error: Could not inject context or modelbuilder into actions '"+v+"'. Exception: \n	"+V.message)}try{var C={Context:l,StateParameters:s};g&&(C.Modelbuilder=g),w&&(C.Actions=w),h=r(window[p],C)}catch(V){console.log("Error: Could not inject dependencies into controller '"+p+"'. Likely cause: Actions or Modelbuilder is trying to use a service that was not injected. Check Actions and Modelbuilder injections. Exception: \n	"+V.message)}i.html(window[c]),i.children().data("$ngControllerController",h),n(i.contents())(l)}return{link:c,scope:{attributeParameter:"@"}}}])},o=function(e){return function(){return{template:e}}},t=function(t,r){r.model||r.modelbuilder||r.actions||r.controller?e(t,r):(templateName=t+"Template",t=t.toLowerCase(),framework.directive(t,o(window[templateName])))};for(var r in this.applicationConfig.components){var n=applicationConfig.components[r];t(r,n)}for(var i in this.applicationConfig.views){var a=applicationConfig.views[i];t(i,a)}window.servicesToInject={};var l=function(e){return{$get:window[e]}};for(var s in this.applicationConfig.services)window[s]?(window.servicesToInject[s]=l(s),this.postConfigProvider.provider(s,window.servicesToInject[s])):console.log("Error: '"+s+"' service was specified in config.json but has not been loaded. Check that it exists in your compiled application.")});var framework=angular.module("Framework.Services",[]);framework.provider("Router",function(){var e,o={notRouting:"Router is not navigating to the same route",routingHome:"Router is going to default screen "};return{$get:["$state",function(t){return{goTo:function(e,r){t.current.name!==e||r?t.go(e,r):console.log(o.notRouting)},goToHome:function(){console.log(o.routingHome+e),t.go(e)},getStateParameters:function(){return t.params}}}],setHomeRoute:function(o){e=o}}}),framework.provider("ControllerCommunication",function(){var e={},o={};return{$get:function(){return{registerCallback:function(e,t){o[e]||(o[e]=[]),o[e].push(t)},notifyObservers:function(e){o[e]&&o[e].length&&angular.forEach(o[e],function(e){e()})},get:function(o){return"undefined"!=e[o]?e[o]:(console.log("ControllerCommunication Error: no channel '"+o+"' existing to return data"),!1)},set:function(o,t){e[o]=t,this.notifyObservers(o)}}}}}),framework.provider("FrameworkAJAX",function(){return{$get:["$http",function(e){return{sendRequest:function(o,t,r){return o.method&&o.url&&o.data?e(o).success(t).error(r):void console.log("Error making AJAX request: missing method, url, or data.")}}}]}}),framework.provider("Promise",function(){return{$get:["$q",function(e){return{promisesStorage:{},createDeferred:function(o){return this.promisesStorage[o]=e.defer(),!0},getPromise:function(e){return this.promisesStorage[e]?this.promisesStorage[e].promise:(console.log("Can't return promise: deferred not created correctly"),!1)},resolveDeferred:function(e,o){return this.promisesStorage[e]&&this.promisesStorage[e].resolve?(this.promisesStorage[e].resolve(o),!0):(console.log("Can't resolve: deferred not created correctly"),!1)},rejectDeferred:function(e,o){return this.promisesStorage[e]&&this.promisesStorage[e].reject?(this.promisesStorage[e].reject(o),!0):(console.log("Can't reject: deferred not created correctly"),!1)}}}]}}),framework.provider("PropertyValidation",function(){return validationMappings={},{$get:function(){return{validationTypes:{required:"Validates that an input has (or does not have) a value set",length:"Validates that an input's length is a precise number of characters",min:"Validates that an input's value is greater than a certain value",max:"Validates that an input's value is less than a certain value",regex:"Validates that an input conforms to a particular structure",script:"Validates properties with respect to each other",type:"Validates that the property is the correct type (int, string, etc)"},getPropertyValidationTypes:function(){return this.validationTypes},addPropertyValidation:function(e,o,t){return void 0===this.validationTypes[o]?(console.log("Cannot add unknown validation type '"+o+"'"),!1):(validationMappings[e]||(validationMappings[e]=[]),void validationMappings[e].push({validationType:o,validationValue:t}))},getPropertyValidationRules:function(e){return validationMappings[e]?validationMappings[e]:[]}}}}}),framework.provider("SchemaValidation",function(){return{$get:["$http","PropertyValidation",function(e,o){return{loadSchema:function(t){e.get(t).success(function(e){e.schemaName;for(var t in e.properties){var r=e.properties[t];for(var n in r){var i=r[n];o.addPropertyValidation(t,n,i)}}}).error(function(){console.error("Cannot fetch schema '"+t+"'")})}}}]}}),framework.directive("slimuivalidate",["PropertyValidation",function(PropertyValidation){return{require:"ngModel",restrict:"A",link:function(scope,elm,attrs,ngModel){ngModel&&(ngModel.$validators.propertyValidation=function(modelValue,viewValue){var propertyName=attrs.slimuivalidate,validationRules=PropertyValidation.getPropertyValidationRules(propertyName),test={required:function(e){return!e||e&&viewValue.toString().length>0?!0:!1},length:function(e){return viewValue.toString().length===e?!0:!1},min:function(e){return viewValue>=e?!0:!1},max:function(e){return e>=viewValue?!0:!1},regex:function(e){return"string"==typeof e&&(e=new RegExp(e)),e.test(viewValue)},script:function(script){script="window.validationScript = function(){ return "+script+"; }";var validationStatus;try{eval(script),validationStatus=angular.bind(viewValue,window.validationScript)()}catch(e){console.error("failed to evaluate script or check validation status")}return validationStatus},type:function(e){switch(e){case"date":var o=isNaN(new Date(viewValue)),t="Invalid Date"===new Date(viewValue);return o||t?!1:!0;case"number":return!isNaN(Number.parseFloat(viewValue));case"int":var r=!isNaN(Number.parseInt(viewValue)),n=Number.parseInt(viewValue)===Number.parseFloat(viewValue);return r&&n;case"string":return"string"==typeof viewValue;default:return console.log("could not check type of value"),!1}}},isValid=!0;for(var i in validationRules){var rule=validationRules[i],validationType=rule.validationType,validationValue=rule.validationValue,validationTest;if(!test[validationType])throw"Cannot validate unknown validation rule type '"+validationType+"'!";validationTest=test[validationType](validationValue),ngModel.$setValidity(validationType,validationTest),isValid=isValid&&validationTest}return isValid})}}}]);