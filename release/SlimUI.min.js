var bootstrapModule=angular.module("bootstrapModule",[]);bootstrapModule.factory("bootstrapper",function(o,e,n){return{bootstrap:function(t){var i=n.defer();return o.get("config.json").success(function(o){var e=angular.module(t);angular.forEach(o,function(o,n){e.constant(n,o)}),angular.bootstrap(document,[t]),i.resolve()}).error(function(){e.warn("Could not initialize application, configuration could not be loaded."),i.reject()}),i.promise}}});var appContainer=document.createElement("div");bootstrapModule.run(function(o){o.bootstrap("Framework").then(function(){appContainer.remove()})}),angular.element(document).ready(function(){angular.bootstrap(appContainer,["bootstrapModule"])});var framework=angular.module("Framework",["ui.router","ui.bootstrap","ngSanitize","Framework.Services"]),validateConfigFileStructure=function(o){var e=function(o,e){var n=function(e){console.log("Config.json Validation Error: View/Component '"+o+"' "+e)};return e?e.model&&!e.modelbuilder?(n(" is invalid: if includes model, must also include modelbuilder"),!1):e.modelbuilder&&!e.model?(n(" is invalid: if includes modelbuilder, must also include model"),!1):e.actions&&!e.controller?(n(" is invalid: if includes actions, must also include controller"),!1):e.modelbuilder&&!e.controller?(n(" is invalid: if includes modelbuilder, must also include controller"),!1):e.path?!0:(n(" is invalid: missing 'path'"),!1):(n("can't be validated"),!1)},n=!0;if(o.defaultView&&o.views[o.defaultView]&&(e(o.defaultView,o.views[o.defaultView])||(console.log("Config defaultView exists, but points to an invalid view"),n=!1)),o.views)for(var t in o.views){var i=o.views[t];e(t,i)||(console.log("	View '"+t+"' is invalid with broken template or controller"),n=!1),i.regions&&(i.url||(console.log("View '"+t+"' is invalid: cannot specify regions without 'url' property"),n=!1))}if(o.components)for(var t in o.components)e(t,o.components[t])||(n=!1,console.log("	Component '"+t+"' is invalid with broken template or controller"));for(var t in this.applicationConfig.services){var r=this.applicationConfig.services[t].path;this.applicationConfig.properties&&this.applicationConfig.properties.paths&&this.applicationConfig.properties.paths[r]||(n=!1,console.log("Service '"+t+"' is invalid: missing path '"+r+"'"))}return n};framework.config(function(o,e,n,t,i,r){this.applicationConfig=n,this.postConfigProvider=i,framework._directive=framework.directive,framework.directive=function(o,e){return t.directive(o,e),this},validateConfigFileStructure(n)||console.log("SlimUI ERROR: config.json file is invalid");var a=function(e,t,i){var r,l=function(o,e){var n="";for(var t in e){var i=e[t];n+="/{"+i+"}"}return"/"==o&&(o=""),"/"+o+n},c=function(o,e){return o&&e?e+"."+o:o?o:void console.log("Error: Can't create router state from view name and/or parent view name")};r=t.url?l(t.url,t.parameters):l(e,t.parameters);var s=c(e,i),d={url:r,template:"<div "+e+"></div>"};o.state(s,d);for(var u in t.subroutes){var f=t.subroutes[u],m=n.views[f];a(f,m,i?i+"."+e:e)}};for(var l in n.views){var c=n.views[l];void 0!=c.url&&a(l,c)}var s=n.views[n.defaultView],d=s.url;if(s.parameters)for(var l=0;l<s.parameters.length;l++)d+="/";r.setHomeRoute(d),e.otherwise(function(o,e){return console.log("Invalid location '"+e.$$url+"', going to default route '"+d+"'"),d})}),framework.run(function(){var o=function(o,e){var n=o.toLowerCase();framework.directive(n,function(n,t,i,r,a,l){function c(n,r){var c=n.$new(),s=o+"Template",d=o+"Model",u=o+"Modelbuilder",f=o+"Actions",m=o+"Controller",v=!1;if(e.template&&!window[s]&&(console.log("Couldn't correctly load template named '"+s+"'."),v=!0),e.model&&!window[d]&&(console.log("Couldn't correctly load model named '"+d+"'."),v=!0),e.model&&!window[d]&&(console.log("Couldn't correctly load modelbuilder named '"+u+"'."),v=!0),e.model&&!window[d]&&(console.log("Couldn't correctly load actions named '"+f+"'."),v=!0),e.model&&!window[d]&&(console.log("Couldn't correctly load controller named '"+m+"'."),v=!0),v)return void console.log("Check spelling in file and config.json. Aborting creation of '"+o+"'");var p=function(o){var e;try{e=a.annotate(window[o])}catch(n){console.log("Error: Failed to find dependency injection information for '"+o+"'.\n	Please check in the file that the function name is spelled correctly.")}var t=[];for(var i in e){var r=e[i];if("Context"!=r&&"Actions"!=r&&"Model"!=r&&"Modelbuilder"!=r&&"StateParameters"!=r&&"SlimUIAttribute"!=r)try{a.get(r)}catch(l){t.push(r)}}t.length&&console.log("Error: Not all of "+o+"'s dependencies have been loaded correctly.\n	Missing dependencies: "+t.toString()+"\nIf these are newly-added dependency injections, have they been added to config.json and named correctly? Additionally, check that the spelling in "+o+" matches the function name in the dependency's JavaScript file.")};e.modelbuilder&&p(u),e.actions&&p(f),e.controller&&p(m);var g,w;if(window[d])try{var h={Model:window[d]()};g=t(window[u],h)}catch(b){console.log("Error: Could not inject model into modelbuilder. Exception: \n	"+b.message)}if(window[f])try{var C={Context:c};g&&(C.Modelbuilder=g),w=t(window[f],C)}catch(b){console.log("Error: Could not inject context or modelbuilder into actions. Exception: \n	"+b.message)}try{var k={Context:c,StateParameters:l};g&&(k.Modelbuilder=g),w&&(k.Actions=w),r[0].attributes&&r[0].attributes["slimui-attribute"]&&(k.SlimUIAttribute=r[0].attributes["slimui-attribute"].value);var y=t(window[m],k)}catch(b){console.log("Error: Could not inject dependencies into controller. Exception: \n	"+b.message)}r.html(window[s]),r.children().data("$ngControllerController",y),i(r.contents())(c)}return{link:c,scope:{attributeParameter:"@"}}})},e=function(o){return function(){return{template:o}}},n=function(n,t){t.model||t.modelbuilder||t.actions||t.controller?o(n,t):(templateName=n+"Template",n=n.toLowerCase(),framework.directive(n,e(window[templateName])))};for(var t in this.applicationConfig.components){var i=applicationConfig.components[t];n(t,i)}for(var t in this.applicationConfig.views){var r=applicationConfig.views[t];n(t,r)}if(window.servicesToInject={},this.applicationConfig.services)for(var a in this.applicationConfig.services)window[a]?(window.servicesToInject[a]=function(){return{$get:window[a]}},this.postConfigProvider.provider(a,window.servicesToInject[a])):console.log("Error: '"+a+"' service was specified in config.json but has not been loaded. Check that it exists in your compiled application.");else console.log("SlimUI: no services specified in config.json")});var framework=angular.module("Framework.Services",[]);framework.provider("Router",function(){var o,e={routingFrom:"Navigating from ",routingTo:" to ",notRouting:"Router is not navigating to the same route",routingHome:"Router is going to default screen "};return{$get:function(n){return{goTo:function(o,t){n.current.name!==o||t?n.go(o,t):console.log(e.notRouting)},goToHome:function(){console.log(e.routingHome+o),n.go(o)}}},setHomeRoute:function(e){o=e}}}),framework.provider("ControllerCommunication",function(){var o={},e={};return{$get:function(){return{registerCallback:function(o,n){e[o]||(e[o]=[]),e[o].push(n)},notifyObservers:function(o){e[o]&&e[o].length&&angular.forEach(e[o],function(o){o()})},get:function(e){return"undefined"!=o[e]?o[e]:(console.log("ControllerCommunication Error: no channel '"+e+"' existing to return data"),!1)},set:function(e,n){o[e]=n,this.notifyObservers(e)}}}}}),framework.provider("FrameworkAJAX",function(){return{$get:function(o){return{sendRequest:function(e,n,t){return e.method&&e.url&&e.data?void o(e).success(n).error(t):void console.log("Error making AJAX request: missing method, url, or data.")}}}}});